#+title: Readme

These scripts can be placed or linked (i.e. ln -s download-video
/usr/local/bin/download-video) to one of your PATH directories.

It works and was tested with the fork of [[https://github.com/ytdl-org/youtube-dl][youtube-dl]] called [[https://github.com/yt-dlp/yt-dlp][yt-dlp]]. The latter
has additional features and is actively maintained/updated.

Additionally, if you want to add more flags/options when calling any of the
scripts, you can do it like the following (assuming the list has say 60+ videos):
#+begin_src shell
download-list https://some.awesome.list.com --playlist-start 53 --playlist-end 60
#+end_src

Another way to specify items exolicitly to download from a playlist is the following (assuming it has 31 items or more):
#+begin_src shell
download-list https://some.awesome.list.com --playlist-items 31,27
#+end_src

And so on... Have fun!

* Scheduling tips and streamlining
Create list on youtube/rumble with the visibility set to "unlisted" (which is not private nore public but any one with a link can access it). Instead of adding videos to the "Watch Later" list, add it to this unlisted list. This way you don't need any authentication, and no one knows about it. 

Now, on your local machine, on which these videos are to be downloaded, you can schedule a task to invoke the ~cd <<destination-folder>> && download-list <<my-unlisted-list-url>>~ in crontab to run every minute or what have you. Once you add a video to that list, within a max of 1 minute (in my case) it will start downloading it.

So, you only need to add videos to the list, and it gets downloaded. This script won't take a lot of CPU or redownload what has been. This is because it keeps track of what has been downloaded in the local folder to that ~<<destination-folder>>/downloaded.txt~ list of hashes.

* Caveat

You will need to delete the files from the folder manually. Maybe ~yt-dlp~ has an option to remove files not in the list any more, but I don't want to use it... because once the videos are downloaded, I want to empty the list, and add few more videos to be downloaded, but that doesn't mean I want my videos (potentially unwatched yet) be deleted from my folder.

* My final setup stub

Following [[https://www.pankajtanwar.in/blog/prevent-duplicate-cron-job-running][this great guide]] about how to use ~flock~, I could use the scripts on
a cronjob that runs every minute without launching infinite amount of processes
that would end up messing up the download folder and potentially corrupting
files.

This is the stub (fill in your specific info between the pair of << and >> and
remove these angle brackets):
#+begin_src shell
 ,* * * * * /usr/bin/flock -w 0 /var/lock/yt-dlp/download-list.lock cd <<destination-folder>> && \
     /usr/local/bin/download-list-auto <<my-unlisted-list-url>> \
                                  > /var/log/download-list.log 2>&1
#+end_src

I hope this helps!
